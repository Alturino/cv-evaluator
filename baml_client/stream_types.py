# ----------------------------------------------------------------------------
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml
#
# ----------------------------------------------------------------------------

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code using: baml-cli generate
# baml-cli is available with the baml package.

import typing
import typing_extensions
from pydantic import BaseModel, ConfigDict

import baml_py

from . import types

StreamStateValueT = typing.TypeVar('StreamStateValueT')
class StreamState(BaseModel, typing.Generic[StreamStateValueT]):
    value: StreamStateValueT
    state: typing_extensions.Literal["Pending", "Incomplete", "Complete"]
# #########################################################################
# Generated classes (3)
# #########################################################################

class Education(BaseModel):
    school: typing.Optional[str] = None
    gpa: typing.Optional[float] = None
    max_gpa: typing.Optional[float] = None

class Experience(BaseModel):
    company: typing.Optional[str] = None
    position: typing.Optional[str] = None
    location: typing.Optional[str] = None
    start_date: typing.Optional[str] = None
    end_date: typing.Optional[str] = None
    description: typing.Optional[str] = None
    responsibilities: typing.List[str]

class Resume(BaseModel):
    name: typing.Optional[str] = None
    address: typing.Optional[str] = None
    projects: typing.List[str]
    educations: typing.List["Education"]
    experience: typing.List["Experience"]
    skills: typing.List[str]

# #########################################################################
# Generated type aliases (0)
# #########################################################################
